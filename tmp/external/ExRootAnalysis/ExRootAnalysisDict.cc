#define private public
#define protected public

/** \class ExRootAnalysisLinkDef
 *
 *  Lists classes to be included in cint dicitonary
 *
 *  $Date: 2008-07-08 12:01:52 $
 *  $Revision: 1.2 $
 *
 *  
 *  \author P. Demin - UCL, Louvain-la-Neuve
 *
 */

#include "ExRootAnalysis/ExRootTreeReader.h"
#include "ExRootAnalysis/ExRootTreeWriter.h"
#include "ExRootAnalysis/ExRootTreeBranch.h"
#include "ExRootAnalysis/ExRootResult.h"
#include "ExRootAnalysis/ExRootUtilities.h"
#include "ExRootAnalysis/ExRootClassifier.h"
#include "ExRootAnalysis/ExRootFilter.h"

#include "ExRootAnalysis/ExRootProgressBar.h"
#include "ExRootAnalysis/ExRootConfReader.h"
#include "ExRootAnalysis/ExRootTask.h"

#ifdef __CINT__

#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;

#pragma link C++ class ExRootTreeReader+;
#pragma link C++ class ExRootTreeBranch+;
#pragma link C++ class ExRootTreeWriter+;
#pragma link C++ class ExRootResult+;
#pragma link C++ class ExRootClassifier+;
#pragma link C++ class ExRootFilter+;

#pragma link C++ class ExRootProgressBar+;
#pragma link C++ class ExRootConfReader+;
#pragma link C++ class ExRootConfParam+;
#pragma link C++ class ExRootTask+;

#pragma link C++ function HistStyle;
#pragma link C++ function FillChain;

#endif

//
// File generated by rootcint at Fri Sep 25 13:50:52 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME tmpdIexternaldIExRootAnalysisdIExRootAnalysisDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ExRootAnalysisDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootTreeBranch ExRootTreeBranch;
      #else
      class ExRootTreeBranch  {
         public:
         //friend XX;
         int fSize; //
         int fCapacity; //!
         vector< float >* fDataFloat; //mod  
         ::TClonesArray* fData; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootResult ExRootResult;
      #else
      class ExRootResult  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ExRootResult::PlotSettings PlotSettings;
         #else
         class PlotSettings  {
            public:
            //friend XX;
            int logx; //
            int logy; //
            ::TObjArray* attachments; //
         };
         #endif

         ::TCanvas* fCanvas; //!
         set< ::TObject* > fPool; //!
         map< ::TObject*, PlotSettings > fPlotMap; //!
         ::TFolder* fFolder; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootClassifier ExRootClassifier;
      #else
      class ExRootClassifier  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ExRootClassifier() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootFilter ExRootFilter;
      #else
      class ExRootFilter  {
         public:
         //friend XX;
         :: TSeqCollection* fCollection; //!
         ::TIterator* fIter; //!
         map< ::ExRootClassifier*, pair< bool, map< int, ::TObjArray*, ::less< int >, allocator< pair< const int, ::TObjArray* >  >  >  >  > fMap; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootProgressBar ExRootProgressBar;
      #else
      class ExRootProgressBar  {
         public:
         //friend XX;
         G__int64 fEntries; //
         G__int64 fEventCounter; //
         int fWidth; //
         G__uint64 fTime; //
         int fHashes; //
         char* fBar; //!
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ExRootConfParam ExRootConfParam;
      #else
      class ExRootConfParam  {
         public:
         //friend XX;
          char* fName; //!
         ::Tcl_Obj* fObject; //!
         ::Tcl_Interp* fTclInterp; //!
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ExRootTreeReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootTreeReader(void *p = 0);
   static void *newArray_ExRootTreeReader(Long_t size, void *p);
   static void delete_ExRootTreeReader(void *p);
   static void deleteArray_ExRootTreeReader(void *p);
   static void destruct_ExRootTreeReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTreeReader*)
   {
      ::ExRootTreeReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootTreeReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTreeReader", ::ExRootTreeReader::Class_Version(), "external/ExRootAnalysis/ExRootTreeReader.h", 24,
                  typeid(::ExRootTreeReader), DefineBehavior(ptr, ptr),
                  &::ExRootTreeReader::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTreeReader) );
      instance.SetNew(&new_ExRootTreeReader);
      instance.SetNewArray(&newArray_ExRootTreeReader);
      instance.SetDelete(&delete_ExRootTreeReader);
      instance.SetDeleteArray(&deleteArray_ExRootTreeReader);
      instance.SetDestructor(&destruct_ExRootTreeReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTreeReader*)
   {
      return GenerateInitInstanceLocal((::ExRootTreeReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootTreeBranch_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootTreeBranch_Dictionary();
   static void delete_ExRootTreeBranch(void *p);
   static void deleteArray_ExRootTreeBranch(void *p);
   static void destruct_ExRootTreeBranch(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTreeBranch*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootTreeBranch) == sizeof(::ROOT::Shadow::ExRootTreeBranch));
      ::ExRootTreeBranch *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootTreeBranch),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTreeBranch", "external/ExRootAnalysis/ExRootTreeBranch.h", 25,
                  typeid(::ExRootTreeBranch), DefineBehavior(ptr, ptr),
                  &ExRootTreeBranch_ShowMembers, &ExRootTreeBranch_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTreeBranch) );
      instance.SetDelete(&delete_ExRootTreeBranch);
      instance.SetDeleteArray(&deleteArray_ExRootTreeBranch);
      instance.SetDestructor(&destruct_ExRootTreeBranch);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTreeBranch*)
   {
      return GenerateInitInstanceLocal((::ExRootTreeBranch*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTreeBranch*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootTreeBranch_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeBranch*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootTreeWriter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootTreeWriter(void *p = 0);
   static void *newArray_ExRootTreeWriter(Long_t size, void *p);
   static void delete_ExRootTreeWriter(void *p);
   static void deleteArray_ExRootTreeWriter(void *p);
   static void destruct_ExRootTreeWriter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTreeWriter*)
   {
      ::ExRootTreeWriter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootTreeWriter >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTreeWriter", ::ExRootTreeWriter::Class_Version(), "external/ExRootAnalysis/ExRootTreeWriter.h", 27,
                  typeid(::ExRootTreeWriter), DefineBehavior(ptr, ptr),
                  &::ExRootTreeWriter::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTreeWriter) );
      instance.SetNew(&new_ExRootTreeWriter);
      instance.SetNewArray(&newArray_ExRootTreeWriter);
      instance.SetDelete(&delete_ExRootTreeWriter);
      instance.SetDeleteArray(&deleteArray_ExRootTreeWriter);
      instance.SetDestructor(&destruct_ExRootTreeWriter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTreeWriter*)
   {
      return GenerateInitInstanceLocal((::ExRootTreeWriter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootResult_Dictionary();
   static void *new_ExRootResult(void *p = 0);
   static void *newArray_ExRootResult(Long_t size, void *p);
   static void delete_ExRootResult(void *p);
   static void deleteArray_ExRootResult(void *p);
   static void destruct_ExRootResult(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootResult*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootResult) == sizeof(::ROOT::Shadow::ExRootResult));
      ::ExRootResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootResult),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootResult", "external/ExRootAnalysis/ExRootResult.h", 22,
                  typeid(::ExRootResult), DefineBehavior(ptr, ptr),
                  &ExRootResult_ShowMembers, &ExRootResult_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootResult) );
      instance.SetNew(&new_ExRootResult);
      instance.SetNewArray(&newArray_ExRootResult);
      instance.SetDelete(&delete_ExRootResult);
      instance.SetDeleteArray(&deleteArray_ExRootResult);
      instance.SetDestructor(&destruct_ExRootResult);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootResult*)
   {
      return GenerateInitInstanceLocal((::ExRootResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootResult_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootResult*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootClassifier_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootClassifier_Dictionary();
   static void delete_ExRootClassifier(void *p);
   static void deleteArray_ExRootClassifier(void *p);
   static void destruct_ExRootClassifier(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootClassifier*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootClassifier) == sizeof(::ROOT::Shadow::ExRootClassifier));
      ::ExRootClassifier *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootClassifier),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootClassifier", "external/ExRootAnalysis/ExRootClassifier.h", 9,
                  typeid(::ExRootClassifier), DefineBehavior(ptr, ptr),
                  &ExRootClassifier_ShowMembers, &ExRootClassifier_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootClassifier) );
      instance.SetDelete(&delete_ExRootClassifier);
      instance.SetDeleteArray(&deleteArray_ExRootClassifier);
      instance.SetDestructor(&destruct_ExRootClassifier);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootClassifier*)
   {
      return GenerateInitInstanceLocal((::ExRootClassifier*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootClassifier*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootClassifier_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootClassifier*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootFilter_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootFilter_Dictionary();
   static void delete_ExRootFilter(void *p);
   static void deleteArray_ExRootFilter(void *p);
   static void destruct_ExRootFilter(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootFilter*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootFilter) == sizeof(::ROOT::Shadow::ExRootFilter));
      ::ExRootFilter *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootFilter),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootFilter", "external/ExRootAnalysis/ExRootFilter.h", 14,
                  typeid(::ExRootFilter), DefineBehavior(ptr, ptr),
                  &ExRootFilter_ShowMembers, &ExRootFilter_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootFilter) );
      instance.SetDelete(&delete_ExRootFilter);
      instance.SetDeleteArray(&deleteArray_ExRootFilter);
      instance.SetDestructor(&destruct_ExRootFilter);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootFilter*)
   {
      return GenerateInitInstanceLocal((::ExRootFilter*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootFilter*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootFilter_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootFilter*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootProgressBar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootProgressBar_Dictionary();
   static void delete_ExRootProgressBar(void *p);
   static void deleteArray_ExRootProgressBar(void *p);
   static void destruct_ExRootProgressBar(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootProgressBar*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootProgressBar) == sizeof(::ROOT::Shadow::ExRootProgressBar));
      ::ExRootProgressBar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootProgressBar),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootProgressBar", "external/ExRootAnalysis/ExRootProgressBar.h", 7,
                  typeid(::ExRootProgressBar), DefineBehavior(ptr, ptr),
                  &ExRootProgressBar_ShowMembers, &ExRootProgressBar_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootProgressBar) );
      instance.SetDelete(&delete_ExRootProgressBar);
      instance.SetDeleteArray(&deleteArray_ExRootProgressBar);
      instance.SetDestructor(&destruct_ExRootProgressBar);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootProgressBar*)
   {
      return GenerateInitInstanceLocal((::ExRootProgressBar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootProgressBar*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootProgressBar_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootProgressBar*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootConfParam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ExRootConfParam_Dictionary();
   static void *new_ExRootConfParam(void *p = 0);
   static void *newArray_ExRootConfParam(Long_t size, void *p);
   static void delete_ExRootConfParam(void *p);
   static void deleteArray_ExRootConfParam(void *p);
   static void destruct_ExRootConfParam(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootConfParam*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ExRootConfParam) == sizeof(::ROOT::Shadow::ExRootConfParam));
      ::ExRootConfParam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ExRootConfParam),0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootConfParam", "external/ExRootAnalysis/ExRootConfReader.h", 25,
                  typeid(::ExRootConfParam), DefineBehavior(ptr, ptr),
                  &ExRootConfParam_ShowMembers, &ExRootConfParam_Dictionary, isa_proxy, 4,
                  sizeof(::ExRootConfParam) );
      instance.SetNew(&new_ExRootConfParam);
      instance.SetNewArray(&newArray_ExRootConfParam);
      instance.SetDelete(&delete_ExRootConfParam);
      instance.SetDeleteArray(&deleteArray_ExRootConfParam);
      instance.SetDestructor(&destruct_ExRootConfParam);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootConfParam*)
   {
      return GenerateInitInstanceLocal((::ExRootConfParam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootConfParam*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ExRootConfParam_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfParam*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ExRootConfReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootConfReader(void *p = 0);
   static void *newArray_ExRootConfReader(Long_t size, void *p);
   static void delete_ExRootConfReader(void *p);
   static void deleteArray_ExRootConfReader(void *p);
   static void destruct_ExRootConfReader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootConfReader*)
   {
      ::ExRootConfReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootConfReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootConfReader", ::ExRootConfReader::Class_Version(), "external/ExRootAnalysis/ExRootConfReader.h", 50,
                  typeid(::ExRootConfReader), DefineBehavior(ptr, ptr),
                  &::ExRootConfReader::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootConfReader) );
      instance.SetNew(&new_ExRootConfReader);
      instance.SetNewArray(&newArray_ExRootConfReader);
      instance.SetDelete(&delete_ExRootConfReader);
      instance.SetDeleteArray(&deleteArray_ExRootConfReader);
      instance.SetDestructor(&destruct_ExRootConfReader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootConfReader*)
   {
      return GenerateInitInstanceLocal((::ExRootConfReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void ExRootTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ExRootTask(void *p = 0);
   static void *newArray_ExRootTask(Long_t size, void *p);
   static void delete_ExRootTask(void *p);
   static void deleteArray_ExRootTask(void *p);
   static void destruct_ExRootTask(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ExRootTask*)
   {
      ::ExRootTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ExRootTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ExRootTask", ::ExRootTask::Class_Version(), "external/ExRootAnalysis/ExRootTask.h", 24,
                  typeid(::ExRootTask), DefineBehavior(ptr, ptr),
                  &::ExRootTask::Dictionary, isa_proxy, 4,
                  sizeof(::ExRootTask) );
      instance.SetNew(&new_ExRootTask);
      instance.SetNewArray(&newArray_ExRootTask);
      instance.SetDelete(&delete_ExRootTask);
      instance.SetDeleteArray(&deleteArray_ExRootTask);
      instance.SetDestructor(&destruct_ExRootTask);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ExRootTask*)
   {
      return GenerateInitInstanceLocal((::ExRootTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ExRootTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ExRootTreeReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootTreeReader::Class_Name()
{
   return "ExRootTreeReader";
}

//______________________________________________________________________________
const char *ExRootTreeReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootTreeReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootTreeReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootTreeReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeReader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootTreeWriter::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootTreeWriter::Class_Name()
{
   return "ExRootTreeWriter";
}

//______________________________________________________________________________
const char *ExRootTreeWriter::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootTreeWriter::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootTreeWriter::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootTreeWriter::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeWriter*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootConfReader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootConfReader::Class_Name()
{
   return "ExRootConfReader";
}

//______________________________________________________________________________
const char *ExRootConfReader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootConfReader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootConfReader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootConfReader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfReader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *ExRootTask::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ExRootTask::Class_Name()
{
   return "ExRootTask";
}

//______________________________________________________________________________
const char *ExRootTask::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ExRootTask::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ExRootTask::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ExRootTask::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTask*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ExRootTreeReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootTreeReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootTreeReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootTreeReader::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootTreeReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootTreeReader.
      TClass *R__cl = ::ExRootTreeReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChain", &fChain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentTree", &fCurrentTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchMap", (void*)&fBranchMap);
      R__insp.InspectMember("ExRootTreeReader::TBranchMap", (void*)&fBranchMap, "fBranchMap.", true);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootTreeReader(void *p) {
      return  p ? new(p) ::ExRootTreeReader : new ::ExRootTreeReader;
   }
   static void *newArray_ExRootTreeReader(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootTreeReader[nElements] : new ::ExRootTreeReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootTreeReader(void *p) {
      delete ((::ExRootTreeReader*)p);
   }
   static void deleteArray_ExRootTreeReader(void *p) {
      delete [] ((::ExRootTreeReader*)p);
   }
   static void destruct_ExRootTreeReader(void *p) {
      typedef ::ExRootTreeReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTreeReader

//______________________________________________________________________________
namespace ROOT {
   void ExRootTreeBranch_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootTreeBranch.
      typedef ::ROOT::Shadow::ExRootTreeBranch ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootTreeBranch*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &sobj->fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCapacity", &sobj->fCapacity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataFloat", &sobj->fDataFloat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &sobj->fData);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootTreeBranch(void *p) {
      delete ((::ExRootTreeBranch*)p);
   }
   static void deleteArray_ExRootTreeBranch(void *p) {
      delete [] ((::ExRootTreeBranch*)p);
   }
   static void destruct_ExRootTreeBranch(void *p) {
      typedef ::ExRootTreeBranch current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTreeBranch

//______________________________________________________________________________
void ExRootTreeWriter::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootTreeWriter.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootTreeWriter::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootTreeWriter::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootTreeWriter::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootTreeWriter.
      TClass *R__cl = ::ExRootTreeWriter::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeName", &fTreeName);
      R__insp.InspectMember(fTreeName, "fTreeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranches", (void*)&fBranches);
      R__insp.InspectMember("set<ExRootTreeBranch*>", (void*)&fBranches, "fBranches.", true);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootTreeWriter(void *p) {
      return  p ? new(p) ::ExRootTreeWriter : new ::ExRootTreeWriter;
   }
   static void *newArray_ExRootTreeWriter(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootTreeWriter[nElements] : new ::ExRootTreeWriter[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootTreeWriter(void *p) {
      delete ((::ExRootTreeWriter*)p);
   }
   static void deleteArray_ExRootTreeWriter(void *p) {
      delete [] ((::ExRootTreeWriter*)p);
   }
   static void destruct_ExRootTreeWriter(void *p) {
      typedef ::ExRootTreeWriter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTreeWriter

//______________________________________________________________________________
namespace ROOT {
   void ExRootResult_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootResult.
      typedef ::ROOT::Shadow::ExRootResult ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootResult*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvas", &sobj->fCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPool", (void*)&sobj->fPool);
      R__insp.InspectMember("set<TObject*>", (void*)&sobj->fPool, "fPool.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlotMap", (void*)&sobj->fPlotMap);
      R__insp.InspectMember("map<TObject*,PlotSettings>", (void*)&sobj->fPlotMap, "fPlotMap.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFolder", &sobj->fFolder);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootResult(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExRootResult : new ::ExRootResult;
   }
   static void *newArray_ExRootResult(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExRootResult[nElements] : new ::ExRootResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootResult(void *p) {
      delete ((::ExRootResult*)p);
   }
   static void deleteArray_ExRootResult(void *p) {
      delete [] ((::ExRootResult*)p);
   }
   static void destruct_ExRootResult(void *p) {
      typedef ::ExRootResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootResult

//______________________________________________________________________________
namespace ROOT {
   void ExRootClassifier_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootClassifier.
      typedef ::ROOT::Shadow::ExRootClassifier ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootClassifier*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootClassifier(void *p) {
      delete ((::ExRootClassifier*)p);
   }
   static void deleteArray_ExRootClassifier(void *p) {
      delete [] ((::ExRootClassifier*)p);
   }
   static void destruct_ExRootClassifier(void *p) {
      typedef ::ExRootClassifier current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootClassifier

//______________________________________________________________________________
namespace ROOT {
   void ExRootFilter_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootFilter.
      typedef ::ROOT::Shadow::ExRootFilter ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootFilter*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCollection", &sobj->fCollection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIter", &sobj->fIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMap", (void*)&sobj->fMap);
      R__insp.InspectMember("map<ExRootClassifier*,std::pair<Bool_t,std::map<Int_t,TObjArray*> > >", (void*)&sobj->fMap, "fMap.", true);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootFilter(void *p) {
      delete ((::ExRootFilter*)p);
   }
   static void deleteArray_ExRootFilter(void *p) {
      delete [] ((::ExRootFilter*)p);
   }
   static void destruct_ExRootFilter(void *p) {
      typedef ::ExRootFilter current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootFilter

//______________________________________________________________________________
namespace ROOT {
   void ExRootProgressBar_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootProgressBar.
      typedef ::ROOT::Shadow::ExRootProgressBar ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootProgressBar*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntries", &sobj->fEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventCounter", &sobj->fEventCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &sobj->fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHashes", &sobj->fHashes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBar", &sobj->fBar);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ExRootProgressBar(void *p) {
      delete ((::ExRootProgressBar*)p);
   }
   static void deleteArray_ExRootProgressBar(void *p) {
      delete [] ((::ExRootProgressBar*)p);
   }
   static void destruct_ExRootProgressBar(void *p) {
      typedef ::ExRootProgressBar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootProgressBar

//______________________________________________________________________________
void ExRootConfReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootConfReader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootConfReader::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootConfReader::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootConfReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootConfReader.
      TClass *R__cl = ::ExRootConfReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTclInterp", &fTclInterp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModules", (void*)&fModules);
      R__insp.InspectMember("ExRootConfReader::ExRootTaskMap", (void*)&fModules, "fModules.", true);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootConfReader(void *p) {
      return  p ? new(p) ::ExRootConfReader : new ::ExRootConfReader;
   }
   static void *newArray_ExRootConfReader(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootConfReader[nElements] : new ::ExRootConfReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootConfReader(void *p) {
      delete ((::ExRootConfReader*)p);
   }
   static void deleteArray_ExRootConfReader(void *p) {
      delete [] ((::ExRootConfReader*)p);
   }
   static void destruct_ExRootConfReader(void *p) {
      typedef ::ExRootConfReader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootConfReader

//______________________________________________________________________________
namespace ROOT {
   void ExRootConfParam_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ExRootConfParam.
      typedef ::ROOT::Shadow::ExRootConfParam ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ExRootConfParam*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fName", &sobj->fName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fObject", &sobj->fObject);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTclInterp", &sobj->fTclInterp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootConfParam(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExRootConfParam : new ::ExRootConfParam;
   }
   static void *newArray_ExRootConfParam(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ExRootConfParam[nElements] : new ::ExRootConfParam[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootConfParam(void *p) {
      delete ((::ExRootConfParam*)p);
   }
   static void deleteArray_ExRootConfParam(void *p) {
      delete [] ((::ExRootConfParam*)p);
   }
   static void destruct_ExRootConfParam(void *p) {
      typedef ::ExRootConfParam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootConfParam

//______________________________________________________________________________
void ExRootTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class ExRootTask.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(ExRootTask::Class(),this);
   } else {
      R__b.WriteClassBuffer(ExRootTask::Class(),this);
   }
}

//______________________________________________________________________________
void ExRootTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ExRootTask.
      TClass *R__cl = ::ExRootTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFolder", &fFolder);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fConfReader", &fConfReader);
      TTask::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ExRootTask(void *p) {
      return  p ? new(p) ::ExRootTask : new ::ExRootTask;
   }
   static void *newArray_ExRootTask(Long_t nElements, void *p) {
      return p ? new(p) ::ExRootTask[nElements] : new ::ExRootTask[nElements];
   }
   // Wrapper around operator delete
   static void delete_ExRootTask(void *p) {
      delete ((::ExRootTask*)p);
   }
   static void deleteArray_ExRootTask(void *p) {
      delete [] ((::ExRootTask*)p);
   }
   static void destruct_ExRootTask(void *p) {
      typedef ::ExRootTask current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ExRootTask

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

/********************************************************
* tmp/external/ExRootAnalysis/ExRootAnalysisDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableExRootAnalysisDict();

extern "C" void G__set_cpp_environmentExRootAnalysisDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__cpp_reset_tagtableExRootAnalysisDict();
}
#include <new>
extern "C" int G__cpp_dllrevExRootAnalysisDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ExRootTreeReader */
static int G__ExRootAnalysisDict_542_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeReader((TTree*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootTreeReader((TTree*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeReader[n];
       } else {
         p = new((void*) gvp) ExRootTreeReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeReader;
       } else {
         p = new((void*) gvp) ExRootTreeReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeReader*) G__getstructoffset())->SetTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const ExRootTreeReader*) G__getstructoffset())->GetEntries());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((ExRootTreeReader*) G__getstructoffset())->ReadEntry((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeReader*) G__getstructoffset())->UseBranch((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootTreeReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootTreeReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootTreeReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_542_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_542_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTreeReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTreeReader(*(ExRootTreeReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTreeReader G__TExRootTreeReader;
static int G__ExRootAnalysisDict_542_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTreeReader*) (soff+(sizeof(ExRootTreeReader)*i)))->~G__TExRootTreeReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTreeReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTreeReader*) (soff))->~G__TExRootTreeReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_542_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeReader* dest = (ExRootTreeReader*) G__getstructoffset();
   *dest = *(ExRootTreeReader*) libp->para[0].ref;
   const ExRootTreeReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTreeBranch */
static int G__ExRootAnalysisDict_608_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeBranch(
(const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ExRootTreeBranch(
(const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])
, (TTree*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootTreeBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_608_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeBranch* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeBranch((const char*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootTreeBranch((const char*) G__int(libp->para[0]), (TTree*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeBranch((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootTreeBranch((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_608_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeBranch*) G__getstructoffset())->NewEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_608_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeBranch*) G__getstructoffset())->NewFloatEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_608_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeBranch*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_608_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTreeBranch* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTreeBranch(*(ExRootTreeBranch*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTreeBranch G__TExRootTreeBranch;
static int G__ExRootAnalysisDict_608_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTreeBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTreeBranch*) (soff+(sizeof(ExRootTreeBranch)*i)))->~G__TExRootTreeBranch();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTreeBranch*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTreeBranch*) (soff))->~G__TExRootTreeBranch();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_608_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeBranch* dest = (ExRootTreeBranch*) G__getstructoffset();
   *dest = *(ExRootTreeBranch*) libp->para[0].ref;
   const ExRootTreeBranch& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTreeWriter */
static int G__ExRootAnalysisDict_609_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeWriter* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeWriter((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootTreeWriter((TFile*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTreeWriter((TFile*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootTreeWriter((TFile*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeWriter[n];
       } else {
         p = new((void*) gvp) ExRootTreeWriter[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootTreeWriter;
       } else {
         p = new((void*) gvp) ExRootTreeWriter;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->SetTreeFile((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->SetTreeName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeWriter*) G__getstructoffset())->NewBranch((const char*) G__int(libp->para[0]), (TClass*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTreeWriter*) G__getstructoffset())->NewFloatBranch((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->Fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->Write();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootTreeWriter::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeWriter::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootTreeWriter::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootTreeWriter::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTreeWriter*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeWriter::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeWriter::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTreeWriter::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_609_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTreeWriter::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_609_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTreeWriter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTreeWriter(*(ExRootTreeWriter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTreeWriter G__TExRootTreeWriter;
static int G__ExRootAnalysisDict_609_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTreeWriter*) (soff+(sizeof(ExRootTreeWriter)*i)))->~G__TExRootTreeWriter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTreeWriter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTreeWriter*) (soff))->~G__TExRootTreeWriter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_609_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTreeWriter* dest = (ExRootTreeWriter*) G__getstructoffset();
   *dest = *(ExRootTreeWriter*) libp->para[0].ref;
   const ExRootTreeWriter& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootResult */
static int G__ExRootAnalysisDict_622_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootResult[n];
     } else {
       p = new((void*) gvp) ExRootResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootResult;
     } else {
       p = new((void*) gvp) ExRootResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootResult*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ExRootResult*) G__getstructoffset())->Write((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ExRootResult*) G__getstructoffset())->Write();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ExRootResult*) G__getstructoffset())->Print((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ExRootResult*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist1D((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t*) G__int(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddProfile(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 12:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Axis_t) G__double(libp->para[8]), (Axis_t) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])));
      break;
   case 11:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Axis_t) G__double(libp->para[8]), (Axis_t) G__double(libp->para[9])
, (Int_t) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHist2D(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Axis_t) G__double(libp->para[5])
, (Axis_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Axis_t) G__double(libp->para[8]), (Axis_t) G__double(libp->para[9])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddHistStack((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddLegend((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->AddComment((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootResult*) G__getstructoffset())->Attach((TObject*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootResult*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((ExRootResult*) G__getstructoffset())->PrintPlot((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((ExRootResult*) G__getstructoffset())->PrintPlot((TObject*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ExRootResult*) G__getstructoffset())->PrintPlot((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_622_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootResult*) G__getstructoffset())->SetFolder((TFolder*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_622_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootResult* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootResult(*(ExRootResult*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootResult G__TExRootResult;
static int G__ExRootAnalysisDict_622_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootResult*) (soff+(sizeof(ExRootResult)*i)))->~G__TExRootResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootResult*) (soff))->~G__TExRootResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_622_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootResult* dest = (ExRootResult*) G__getstructoffset();
   *dest = *(ExRootResult*) libp->para[0].ref;
   const ExRootResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootClassifier */
static int G__ExRootAnalysisDict_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ExRootClassifier*) G__getstructoffset())->GetCategory((TObject*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootClassifier G__TExRootClassifier;
static int G__ExRootAnalysisDict_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootClassifier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootClassifier*) (soff+(sizeof(ExRootClassifier)*i)))->~G__TExRootClassifier();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootClassifier*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootClassifier*) (soff))->~G__TExRootClassifier();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_638_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootClassifier* dest = (ExRootClassifier*) G__getstructoffset();
   *dest = *(ExRootClassifier*) libp->para[0].ref;
   const ExRootClassifier& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootFilter */
static int G__ExRootAnalysisDict_639_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootFilter* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ExRootFilter((TSeqCollection*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ExRootFilter((TSeqCollection*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_639_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((ExRootFilter*) G__getstructoffset())->Reset((ExRootClassifier*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((ExRootFilter*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_639_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootFilter*) G__getstructoffset())->GetSubArray((ExRootClassifier*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_639_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootFilter* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootFilter(*(ExRootFilter*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootFilter G__TExRootFilter;
static int G__ExRootAnalysisDict_639_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootFilter*) (soff+(sizeof(ExRootFilter)*i)))->~G__TExRootFilter();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootFilter*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootFilter*) (soff))->~G__TExRootFilter();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootProgressBar */
static int G__ExRootAnalysisDict_657_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootProgressBar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootProgressBar((Long64_t) G__Longlong(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_657_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((ExRootProgressBar*) G__getstructoffset())->Update((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((ExRootProgressBar*) G__getstructoffset())->Update((Long64_t) G__Longlong(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ExRootProgressBar*) G__getstructoffset())->Update((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_657_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootProgressBar*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_657_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootProgressBar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootProgressBar(*(ExRootProgressBar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootProgressBar G__TExRootProgressBar;
static int G__ExRootAnalysisDict_657_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootProgressBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootProgressBar*) (soff+(sizeof(ExRootProgressBar)*i)))->~G__TExRootProgressBar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootProgressBar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootProgressBar*) (soff))->~G__TExRootProgressBar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_657_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootProgressBar* dest = (ExRootProgressBar*) G__getstructoffset();
   *dest = *(ExRootProgressBar*) libp->para[0].ref;
   const ExRootProgressBar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootConfParam */
static int G__ExRootAnalysisDict_660_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootConfParam* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfParam(
(const char*) G__int(libp->para[0]), (Tcl_Obj*) G__int(libp->para[1])
, (Tcl_Interp*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) ExRootConfParam(
(const char*) G__int(libp->para[0]), (Tcl_Obj*) G__int(libp->para[1])
, (Tcl_Interp*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfParam((const char*) G__int(libp->para[0]), (Tcl_Obj*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ExRootConfParam((const char*) G__int(libp->para[0]), (Tcl_Obj*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfParam((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ExRootConfParam((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootConfParam[n];
       } else {
         p = new((void*) gvp) ExRootConfParam[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new ExRootConfParam;
       } else {
         p = new((void*) gvp) ExRootConfParam;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((ExRootConfParam*) G__getstructoffset())->GetInt((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((ExRootConfParam*) G__getstructoffset())->GetInt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 108, (long) ((ExRootConfParam*) G__getstructoffset())->GetLong((long) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 108, (long) ((ExRootConfParam*) G__getstructoffset())->GetLong());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((ExRootConfParam*) G__getstructoffset())->GetDouble((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((ExRootConfParam*) G__getstructoffset())->GetDouble());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((ExRootConfParam*) G__getstructoffset())->GetFloat((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((ExRootConfParam*) G__getstructoffset())->GetFloat());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((ExRootConfParam*) G__getstructoffset())->GetBool((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ExRootConfParam*) G__getstructoffset())->GetBool());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 67, (long) ((ExRootConfParam*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 67, (long) ((ExRootConfParam*) G__getstructoffset())->GetString());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ExRootConfParam*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_660_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ExRootConfParam* pobj;
         ExRootConfParam xobj = ((ExRootConfParam*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         pobj = new ExRootConfParam(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_660_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootConfParam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootConfParam(*(ExRootConfParam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootConfParam G__TExRootConfParam;
static int G__ExRootAnalysisDict_660_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootConfParam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootConfParam*) (soff+(sizeof(ExRootConfParam)*i)))->~G__TExRootConfParam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootConfParam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootConfParam*) (soff))->~G__TExRootConfParam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootConfReader */
static int G__ExRootAnalysisDict_661_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootConfReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfReader[n];
     } else {
       p = new((void*) gvp) ExRootConfReader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootConfReader;
     } else {
       p = new((void*) gvp) ExRootConfReader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootConfReader*) G__getstructoffset())->ReadFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ExRootConfReader*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ExRootConfReader*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 108, (long) ((ExRootConfReader*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 108, (long) ((ExRootConfReader*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((ExRootConfReader*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ExRootConfReader*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((ExRootConfReader*) G__getstructoffset())->GetFloat((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((ExRootConfReader*) G__getstructoffset())->GetFloat((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ExRootConfReader*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ExRootConfReader*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((ExRootConfReader*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((ExRootConfReader*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ExRootConfParam* pobj;
         ExRootConfParam xobj = ((ExRootConfReader*) G__getstructoffset())->GetParam((const char*) G__int(libp->para[0]));
         pobj = new ExRootConfParam(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ExRootConfReader*) G__getstructoffset())->GetModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootConfReader*) G__getstructoffset())->AddModule((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootConfReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootConfReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootConfReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootConfReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootConfReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootConfReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootConfReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootConfReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_661_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootConfReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_661_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootConfReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootConfReader(*(ExRootConfReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootConfReader G__TExRootConfReader;
static int G__ExRootAnalysisDict_661_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootConfReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootConfReader*) (soff+(sizeof(ExRootConfReader)*i)))->~G__TExRootConfReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootConfReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootConfReader*) (soff))->~G__TExRootConfReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_661_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootConfReader* dest = (ExRootConfReader*) G__getstructoffset();
   *dest = *(ExRootConfReader*) libp->para[0].ref;
   const ExRootConfReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ExRootTask */
static int G__ExRootAnalysisDict_670_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTask* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTask[n];
     } else {
       p = new((void*) gvp) ExRootTask[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ExRootTask;
     } else {
       p = new((void*) gvp) ExRootTask;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->Process();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->Finish();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->InitTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->ProcessTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->FinishTask();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->InitSubTasks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->ProcessSubTasks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->FinishSubTasks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTask*) G__getstructoffset())->NewTask((TClass*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTask*) G__getstructoffset())->NewTask((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ExRootTask*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ExRootTask*) G__getstructoffset())->GetInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 108, (long) ((ExRootTask*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 108, (long) ((ExRootTask*) G__getstructoffset())->GetLong((const char*) G__int(libp->para[0]), (long) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((ExRootTask*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ExRootTask*) G__getstructoffset())->GetDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 102, (double) ((ExRootTask*) G__getstructoffset())->GetFloat((const char*) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 102, (double) ((ExRootTask*) G__getstructoffset())->GetFloat((const char*) G__int(libp->para[0]), (float) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((ExRootTask*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((ExRootTask*) G__getstructoffset())->GetBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((ExRootTask*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((ExRootTask*) G__getstructoffset())->GetString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         ExRootConfParam* pobj;
         ExRootConfParam xobj = ((ExRootTask*) G__getstructoffset())->GetParam((const char*) G__int(libp->para[0]));
         pobj = new ExRootConfParam(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ExRootTask*) G__getstructoffset())->GetModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->SetFolder((TFolder*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->SetConfReader((ExRootConfReader*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ExRootTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ExRootTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ExRootTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ExRootTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ExRootTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict_670_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ExRootTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ExRootAnalysisDict_670_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ExRootTask* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ExRootTask(*(ExRootTask*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ExRootTask G__TExRootTask;
static int G__ExRootAnalysisDict_670_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ExRootTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ExRootTask*) (soff+(sizeof(ExRootTask)*i)))->~G__TExRootTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ExRootTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ExRootTask*) (soff))->~G__TExRootTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ExRootAnalysisDict_670_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ExRootTask* dest = (ExRootTask*) G__getstructoffset();
   *dest = *(ExRootTask*) libp->para[0].ref;
   const ExRootTask& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__ExRootAnalysisDict__0_2009(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      HistStyle((TH1*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      HistStyle((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ExRootAnalysisDict__0_2010(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) FillChain((TChain*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* ExRootTreeReader */

/* ExRootTreeBranch */

/* ExRootTreeWriter */

/* ExRootResult */

/* ExRootClassifier */

/* ExRootFilter */

/* ExRootProgressBar */

/* ExRootConfParam */

/* ExRootConfReader */

/* ExRootTask */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncExRootAnalysisDict {
 public:
  G__Sizep2memfuncExRootAnalysisDict(): p(&G__Sizep2memfuncExRootAnalysisDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncExRootAnalysisDict::*p)();
};

size_t G__get_sizep2memfuncExRootAnalysisDict()
{
  G__Sizep2memfuncExRootAnalysisDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceExRootAnalysisDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader))) {
     ExRootTreeReader *G__Lderived;
     G__Lderived=(ExRootTreeReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter))) {
     ExRootTreeWriter *G__Lderived;
     G__Lderived=(ExRootTreeWriter*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader))) {
     ExRootConfReader *G__Lderived;
     G__Lderived=(ExRootConfReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask))) {
     ExRootTask *G__Lderived;
     G__Lderived=(ExRootTask*)0x1000;
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask),G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableExRootAnalysisDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("Axis_t",100,-1,0,-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,std::pair<TBranch*,TClonesArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,pair<TBranch*,TClonesArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,pair<TBranch*,TClonesArray*>,less<TString> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TBranchMap",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<ExRootTreeBranch*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<ExRootTreeBranch*,less<ExRootTreeBranch*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TObject*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TObject*,less<TObject*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,PlotSettings>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,ExRootResult::PlotSettings>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TObject*,ExRootResult::PlotSettings,less<TObject*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TObjArray*>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TObjArray*,less<int> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Bool_t,std::map<Int_t,TObjArray*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ExRootClassifier*,std::pair<Bool_t,std::map<Int_t,TObjArray*> > >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ExRootClassifier*,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > > >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ExRootClassifier*,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > >,less<ExRootClassifier*> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ExRootTaskMap",117,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ExRootTreeReader */
static void G__setup_memvarExRootTreeReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   { ExRootTreeReader *p; p=(ExRootTreeReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTree),-1,-1,4,"fChain=",0,"! pointer to the analyzed TTree or TChain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurrentTree=",0,"! current Tree number in a TChain");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR),G__defined_typename("TBranchMap"),-1,4,"fBranchMap=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootTreeBranch */
static void G__setup_memvarExRootTreeBranch(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   { ExRootTreeBranch *p; p=(ExRootTreeBranch*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCapacity=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"fDataFloat=",0,"mod  ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClonesArray),-1,-1,4,"fData=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ExRootTreeWriter */
static void G__setup_memvarExRootTreeWriter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   { ExRootTreeWriter *p; p=(ExRootTreeWriter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFile),-1,-1,4,"fFile=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTree),-1,-1,4,"fTree=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TString),-1,-1,4,"fTreeName=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR),G__defined_typename("set<ExRootTreeBranch*>"),-1,4,"fBranches=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootResult */
static void G__setup_memvarExRootResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   { ExRootResult *p; p=(ExRootResult*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCanvas),-1,-1,4,"fCanvas=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR),G__defined_typename("set<TObject*>"),-1,4,"fPool=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR),G__defined_typename("map<TObject*,PlotSettings>"),-1,4,"fPlotMap=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fFolder=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ExRootClassifier */
static void G__setup_memvarExRootClassifier(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootClassifier));
   { ExRootClassifier *p; p=(ExRootClassifier*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootFilter */
static void G__setup_memvarExRootFilter(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   { ExRootFilter *p; p=(ExRootFilter*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TSeqCollection),-1,-1,4,"fCollection=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TIterator),-1,-1,4,"fIter=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<ExRootClassifier*,std::pair<Bool_t,std::map<Int_t,TObjArray*> > >"),-1,4,"fMap=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ExRootProgressBar */
static void G__setup_memvarExRootProgressBar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   { ExRootProgressBar *p; p=(ExRootProgressBar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEntries=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"fEventCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fWidth=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHashes=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,4,"fBar=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ExRootConfParam */
static void G__setup_memvarExRootConfParam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam));
   { ExRootConfParam *p; p=(ExRootConfParam*)0x1000; if (p) { }
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"fName=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_Tcl_Obj),-1,-1,4,"fObject=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_Tcl_Interp),-1,-1,4,"fTclInterp=",0,"!");
   }
   G__tag_memvar_reset();
}


   /* ExRootConfReader */
static void G__setup_memvarExRootConfReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   { ExRootConfReader *p; p=(ExRootConfReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_Tcl_Interp),-1,-1,4,"fTclInterp=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("ExRootTaskMap"),-1,4,"fModules=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ExRootTask */
static void G__setup_memvarExRootTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask));
   { ExRootTask *p; p=(ExRootTask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder),-1,-1,4,"fFolder=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader),-1,-1,4,"fConfReader=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarExRootAnalysisDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncExRootTreeReader(void) {
   /* ExRootTreeReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader));
   G__memfunc_setup("ExRootTreeReader",1604,G__ExRootAnalysisDict_542_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader), -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTree",700,G__ExRootAnalysisDict_542_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntries",1018,G__ExRootAnalysisDict_542_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadEntry",910,G__ExRootAnalysisDict_542_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - entry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseBranch",891,G__ExRootAnalysisDict_542_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClonesArray), -1, 0, 1, 1, 1, 0, "C - - 10 - branchName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Notify",633,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_542_0_7, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootTreeReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_542_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_542_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootTreeReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_542_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootTreeReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_542_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_542_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_542_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_542_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_542_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTreeReader", 1604, G__ExRootAnalysisDict_542_0_19, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader), -1, 0, 1, 1, 1, 0, "u 'ExRootTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTreeReader", 1730, G__ExRootAnalysisDict_542_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_542_0_21, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeReader), -1, 1, 1, 1, 1, 0, "u 'ExRootTreeReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTreeBranch(void) {
   /* ExRootTreeBranch */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch));
   G__memfunc_setup("ExRootTreeBranch",1599,G__ExRootAnalysisDict_608_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'TClass' - 0 - cl "
"U 'TTree' - 0 '0' tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExRootTreeBranch",1599,G__ExRootAnalysisDict_608_0_2, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TTree' - 0 '0' tree", "mod  ", (void*) NULL, 0);
   G__memfunc_setup("NewEntry",828,G__ExRootAnalysisDict_608_0_3, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFloatEntry",1330,G__ExRootAnalysisDict_608_0_4, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 0, 1, 1, 0, "", "mod  ", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ExRootAnalysisDict_608_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTreeBranch", 1599, G__ExRootAnalysisDict_608_0_6, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 1, 1, 1, 0, "u 'ExRootTreeBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTreeBranch", 1725, G__ExRootAnalysisDict_608_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_608_0_8, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 1, 1, 1, 1, 0, "u 'ExRootTreeBranch' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTreeWriter(void) {
   /* ExRootTreeWriter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter));
   G__memfunc_setup("ExRootTreeWriter",1646,G__ExRootAnalysisDict_609_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter), -1, 0, 2, 1, 1, 0, 
"U 'TFile' - 0 '0' file C - - 10 '\"Analysis\"' treeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeFile",1084,G__ExRootAnalysisDict_609_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeName",1085,G__ExRootAnalysisDict_609_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewBranch",888,G__ExRootAnalysisDict_609_0_4, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFloatBranch",1390,G__ExRootAnalysisDict_609_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeBranch), -1, 0, 1, 1, 1, 0, "C - - 10 - name", "mod", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__ExRootAnalysisDict_609_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__ExRootAnalysisDict_609_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__ExRootAnalysisDict_609_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewTree",698,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TTree), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_609_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootTreeWriter::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_609_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeWriter::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_609_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootTreeWriter::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_609_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootTreeWriter::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_609_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_609_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeWriter::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_609_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeWriter::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_609_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTreeWriter::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_609_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTreeWriter::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTreeWriter", 1646, G__ExRootAnalysisDict_609_0_22, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter), -1, 0, 1, 1, 1, 0, "u 'ExRootTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTreeWriter", 1772, G__ExRootAnalysisDict_609_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_609_0_24, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTreeWriter), -1, 1, 1, 1, 1, 0, "u 'ExRootTreeWriter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootResult(void) {
   /* ExRootResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult));
   G__memfunc_setup("ExRootResult",1248,G__ExRootAnalysisDict_622_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ExRootAnalysisDict_622_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__ExRootAnalysisDict_622_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"results.root\"' fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__ExRootAnalysisDict_622_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"eps\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist1D",790,G__ExRootAnalysisDict_622_0_5, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TH1), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax i - 'Int_t' 0 '0' logx "
"i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist1D",790,G__ExRootAnalysisDict_622_0_6, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TH1), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins F - 'Float_t' 10 - bins "
"i - 'Int_t' 0 '0' logx i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProfile",986,G__ExRootAnalysisDict_622_0_7, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TProfile), -1, 0, 9, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax i - 'Int_t' 0 '0' logx "
"i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHist2D",791,G__ExRootAnalysisDict_622_0_8, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TH2), -1, 0, 12, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - xlabel C - - 10 - ylabel "
"i - 'Int_t' 0 - nxbins d - 'Axis_t' 0 - xmin "
"d - 'Axis_t' 0 - xmax i - 'Int_t' 0 - nybins "
"d - 'Axis_t' 0 - ymin d - 'Axis_t' 0 - ymax "
"i - 'Int_t' 0 '0' logx i - 'Int_t' 0 '0' logy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHistStack",1175,G__ExRootAnalysisDict_622_0_9, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_THStack), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLegend",856,G__ExRootAnalysisDict_622_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TLegend), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddComment",988,G__ExRootAnalysisDict_622_0_11, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TPaveText), -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Attach",597,G__ExRootAnalysisDict_622_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - plot U 'TObject' - 0 - object", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,G__ExRootAnalysisDict_622_0_13, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPlot",940,G__ExRootAnalysisDict_622_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TObject' - 0 - plot C - - 10 '\"\"' sufix "
"C - - 10 '\"eps\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFolder",904,G__ExRootAnalysisDict_622_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFolder' - 0 - folder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateCanvas",1200,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootResult", 1248, G__ExRootAnalysisDict_622_0_17, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 0, 1, 1, 1, 0, "u 'ExRootResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootResult", 1374, G__ExRootAnalysisDict_622_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_622_0_19, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootResult), -1, 1, 1, 1, 1, 0, "u 'ExRootResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootClassifier(void) {
   /* ExRootClassifier */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootClassifier));
   G__memfunc_setup("GetCategory",1118,G__ExRootAnalysisDict_638_0_1, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TObject' - 0 - object", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~ExRootClassifier", 1764, G__ExRootAnalysisDict_638_0_2, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_638_0_3, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootClassifier), -1, 1, 1, 1, 1, 0, "u 'ExRootClassifier' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootFilter(void) {
   /* ExRootFilter */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter));
   G__memfunc_setup("ExRootFilter",1223,G__ExRootAnalysisDict_639_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter), -1, 0, 1, 1, 1, 0, "U 'TSeqCollection' - 10 - collection", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__ExRootAnalysisDict_639_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ExRootClassifier' - 0 '0' classifier", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubArray",1097,G__ExRootAnalysisDict_639_0_3, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObjArray), -1, 0, 2, 1, 1, 0, 
"U 'ExRootClassifier' - 0 - classifier i - 'Int_t' 0 - category", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootFilter", 1223, G__ExRootAnalysisDict_639_0_4, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootFilter), -1, 0, 1, 1, 1, 0, "u 'ExRootFilter' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootFilter", 1349, G__ExRootAnalysisDict_639_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootProgressBar(void) {
   /* ExRootProgressBar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar));
   G__memfunc_setup("ExRootProgressBar",1739,G__ExRootAnalysisDict_657_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar), -1, 0, 2, 1, 1, 0, 
"n - 'Long64_t' 0 - entries i - 'Int_t' 0 '64' width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__ExRootAnalysisDict_657_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"n - 'Long64_t' 0 - entry n - 'Long64_t' 0 '0' eventCounter "
"g - 'Bool_t' 0 'kFALSE' last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Finish",609,G__ExRootAnalysisDict_657_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootProgressBar", 1739, G__ExRootAnalysisDict_657_0_4, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar), -1, 0, 1, 1, 1, 0, "u 'ExRootProgressBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootProgressBar", 1865, G__ExRootAnalysisDict_657_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_657_0_6, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootProgressBar), -1, 1, 1, 1, 1, 0, "u 'ExRootProgressBar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootConfParam(void) {
   /* ExRootConfParam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam));
   G__memfunc_setup("ExRootConfParam",1496,G__ExRootAnalysisDict_660_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 3, 1, 1, 0, 
"C - - 10 '0' name U 'Tcl_Obj' - 0 '0' object "
"U 'Tcl_Interp' - 0 '0' interp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__ExRootAnalysisDict_660_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' defaultValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLong",688,G__ExRootAnalysisDict_660_0_3, 108, -1, -1, 0, 1, 1, 1, 0, "l - - 0 '0' defaultValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__ExRootAnalysisDict_660_0_4, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '0.0' defaultValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloat",790,G__ExRootAnalysisDict_660_0_5, 102, -1, -1, 0, 1, 1, 1, 0, "d - - 0 '0.0' defaultValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBool",684,G__ExRootAnalysisDict_660_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' defaultValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__ExRootAnalysisDict_660_0_7, 67, -1, -1, 0, 1, 1, 1, 1, "C - - 10 '\"\"' defaultValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__ExRootAnalysisDict_660_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__ExRootAnalysisDict_660_0_9, 117, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 1, 1, 1, 0, "i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootConfParam", 1496, G__ExRootAnalysisDict_660_0_10, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 1, 1, 1, 0, "u 'ExRootConfParam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootConfParam", 1622, G__ExRootAnalysisDict_660_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootConfReader(void) {
   /* ExRootConfReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader));
   G__memfunc_setup("ExRootConfReader",1594,G__ExRootAnalysisDict_661_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__ExRootAnalysisDict_661_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInt",587,G__ExRootAnalysisDict_661_0_3, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLong",688,G__ExRootAnalysisDict_661_0_4, 108, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name l - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__ExRootAnalysisDict_661_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloat",790,G__ExRootAnalysisDict_661_0_6, 102, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBool",684,G__ExRootAnalysisDict_661_0_7, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name g - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__ExRootAnalysisDict_661_0_8, 67, -1, -1, 0, 3, 1, 1, 1, 
"C - - 10 - name C - - 10 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__ExRootAnalysisDict_661_0_9, 117, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModules",1017,G__ExRootAnalysisDict_661_0_10, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), G__defined_typename("ExRootConfReader::ExRootTaskMap"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddModule",879,G__ExRootAnalysisDict_661_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - className C - - 10 - moduleName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_661_0_12, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootConfReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_661_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootConfReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_661_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootConfReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_661_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootConfReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_661_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_661_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootConfReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_661_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootConfReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_661_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootConfReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_661_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootConfReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootConfReader", 1594, G__ExRootAnalysisDict_661_0_24, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 0, 1, 1, 1, 0, "u 'ExRootConfReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootConfReader", 1720, G__ExRootAnalysisDict_661_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_661_0_26, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 1, 1, 1, 1, 0, "u 'ExRootConfReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncExRootTask(void) {
   /* ExRootTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask));
   G__memfunc_setup("ExRootTask",1012,G__ExRootAnalysisDict_670_0_1, 105, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__ExRootAnalysisDict_670_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Process",735,G__ExRootAnalysisDict_670_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,G__ExRootAnalysisDict_670_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitTask",807,G__ExRootAnalysisDict_670_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessTask",1138,G__ExRootAnalysisDict_670_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishTask",1012,G__ExRootAnalysisDict_670_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitSubTasks",1220,G__ExRootAnalysisDict_670_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ProcessSubTasks",1551,G__ExRootAnalysisDict_670_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FinishSubTasks",1425,G__ExRootAnalysisDict_670_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Add",265,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TTask' - 0 - task", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("NewTask",701,G__ExRootAnalysisDict_670_0_12, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 0, 2, 1, 1, 0, 
"U 'TClass' - 0 - cl C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewTask",701,G__ExRootAnalysisDict_670_0_13, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 0, 2, 1, 1, 0, 
"C - - 10 - className C - - 10 - taskName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exec",389,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInt",587,G__ExRootAnalysisDict_670_0_15, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLong",688,G__ExRootAnalysisDict_670_0_16, 108, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name l - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDouble",891,G__ExRootAnalysisDict_670_0_17, 100, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFloat",790,G__ExRootAnalysisDict_670_0_18, 102, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name f - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBool",684,G__ExRootAnalysisDict_670_0_19, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name g - - 0 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetString",919,G__ExRootAnalysisDict_670_0_20, 67, -1, -1, 0, 3, 1, 1, 1, 
"C - - 10 - name C - - 10 - defaultValue "
"i - - 0 '-1' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__ExRootAnalysisDict_670_0_21, 117, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfParam), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetModules",1017,G__ExRootAnalysisDict_670_0_22, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR), G__defined_typename("ExRootConfReader::ExRootTaskMap"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFolder",904,G__ExRootAnalysisDict_670_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFolder' - 0 - folder", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfReader",1285,G__ExRootAnalysisDict_670_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'ExRootConfReader' - 0 - conf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFolder",892,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfReader",1273,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootConfReader), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NewFolder",902,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TFolder), -1, 0, 1, 1, 2, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TObject), -1, 0, 2, 1, 2, 0, 
"C - - 10 - name U 'TClass' - 0 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ExRootAnalysisDict_670_0_29, 85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ExRootTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ExRootAnalysisDict_670_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ExRootAnalysisDict_670_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ExRootTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ExRootAnalysisDict_670_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ExRootTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ExRootAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ExRootAnalysisDict_670_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ExRootAnalysisDict_670_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ExRootAnalysisDict_670_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ExRootAnalysisDict_670_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ExRootTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ExRootAnalysisDict_670_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ExRootTask::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ExRootTask", 1012, G__ExRootAnalysisDict_670_0_41, (int) ('i'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 0, 1, 1, 1, 0, "u 'ExRootTask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ExRootTask", 1138, G__ExRootAnalysisDict_670_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ExRootAnalysisDict_670_0_43, (int) ('u'), G__get_linked_tagnum(&G__ExRootAnalysisDictLN_ExRootTask), -1, 1, 1, 1, 1, 0, "u 'ExRootTask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncExRootAnalysisDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalExRootAnalysisDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
   G__memfunc_setup("HistStyle", 937, G__ExRootAnalysisDict__0_2009, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hist g - 'Bool_t' 0 'kTRUE' stats", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("FillChain", 874, G__ExRootAnalysisDict__0_2010, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TChain' - 0 - chain C - - 10 - inputFileList", (char*) NULL
, (void*) NULL, 0);

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcExRootAnalysisDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ExRootAnalysisDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TSeqCollection = { "TSeqCollection" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TFolder = { "TFolder" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTreeReader = { "ExRootTreeReader" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR = { "map<TString,pair<TBranch*,TClonesArray*>,less<TString>,allocator<pair<const TString,pair<TBranch*,TClonesArray*> > > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTreeBranch = { "ExRootTreeBranch" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTreeWriter = { "ExRootTreeWriter" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR = { "set<ExRootTreeBranch*,less<ExRootTreeBranch*>,allocator<ExRootTreeBranch*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_THStack = { "THStack" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootResult = { "ExRootResult" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR = { "set<TObject*,less<TObject*>,allocator<TObject*> >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR = { "map<TObject*,ExRootResult::PlotSettings,less<TObject*>,allocator<pair<TObject* const,ExRootResult::PlotSettings> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootClassifier = { "ExRootClassifier" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootFilter = { "ExRootFilter" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR = { "map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR = { "pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > >" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<ExRootClassifier*,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > >,less<ExRootClassifier*>,allocator<pair<ExRootClassifier* const,pair<bool,map<int,TObjArray*,less<int>,allocator<pair<const int,TObjArray*> > > > > > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootProgressBar = { "ExRootProgressBar" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_Tcl_Obj = { "Tcl_Obj" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_Tcl_Interp = { "Tcl_Interp" , 115 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootConfParam = { "ExRootConfParam" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootConfReader = { "ExRootConfReader" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__ExRootAnalysisDictLN_ExRootTask = { "ExRootTask" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableExRootAnalysisDict() {
  G__ExRootAnalysisDictLN_TClass.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TBuffer.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TMemberInspector.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TObject.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TNamed.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TString.tagnum = -1 ;
  G__ExRootAnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TObjArray.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TClonesArray.tagnum = -1 ;
  G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TIterator.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TSeqCollection.tagnum = -1 ;
  G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TFile.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TCanvas.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TFolder.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TTree.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TH1.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TChain.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTreeReader.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTreeBranch.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTreeWriter.tagnum = -1 ;
  G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TH2.tagnum = -1 ;
  G__ExRootAnalysisDictLN_THStack.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TLegend.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TProfile.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TPaveText.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootResult.tagnum = -1 ;
  G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootClassifier.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootFilter.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootProgressBar.tagnum = -1 ;
  G__ExRootAnalysisDictLN_Tcl_Obj.tagnum = -1 ;
  G__ExRootAnalysisDictLN_Tcl_Interp.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootConfParam.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootConfReader.tagnum = -1 ;
  G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__ExRootAnalysisDictLN_TTask.tagnum = -1 ;
  G__ExRootAnalysisDictLN_ExRootTask.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableExRootAnalysisDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TString);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TIterator);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TSeqCollection);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TFolder);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTreeReader),sizeof(ExRootTreeReader),-1,324864,(char*)NULL,G__setup_memvarExRootTreeReader,G__setup_memfuncExRootTreeReader);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETStringcOpairlETBranchmUcOTClonesArraymUgRcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOpairlETBranchmUcOTClonesArraymUgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTreeBranch),sizeof(ExRootTreeBranch),-1,295936,(char*)NULL,G__setup_memvarExRootTreeBranch,G__setup_memfuncExRootTreeBranch);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTreeWriter),sizeof(ExRootTreeWriter),-1,324864,(char*)NULL,G__setup_memvarExRootTreeWriter,G__setup_memfuncExRootTreeWriter);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_setlEExRootTreeBranchmUcOlesslEExRootTreeBranchmUgRcOallocatorlEExRootTreeBranchmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TH2);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_THStack);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TProfile);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TPaveText);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootResult),sizeof(ExRootResult),-1,263424,(char*)NULL,G__setup_memvarExRootResult,G__setup_memfuncExRootResult);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_setlETObjectmUcOlesslETObjectmUgRcOallocatorlETObjectmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETObjectmUcOExRootResultcLcLPlotSettingscOlesslETObjectmUgRcOallocatorlEpairlETObjectmUsPconstcOExRootResultcLcLPlotSettingsgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootClassifier),sizeof(ExRootClassifier),-1,263169,(char*)NULL,G__setup_memvarExRootClassifier,G__setup_memfuncExRootClassifier);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootFilter),sizeof(ExRootFilter),-1,295936,(char*)NULL,G__setup_memvarExRootFilter,G__setup_memfuncExRootFilter);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_pairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplEExRootClassifiermUcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRcOlesslEExRootClassifiermUgRcOallocatorlEpairlEExRootClassifiermUsPconstcOpairlEboolcOmaplEintcOTObjArraymUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTObjArraymUgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootProgressBar),sizeof(ExRootProgressBar),-1,295936,(char*)NULL,G__setup_memvarExRootProgressBar,G__setup_memfuncExRootProgressBar);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_Tcl_Obj);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_Tcl_Interp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootConfParam),sizeof(ExRootConfParam),-1,262400,(char*)NULL,G__setup_memvarExRootConfParam,G__setup_memfuncExRootConfParam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootConfReader),sizeof(ExRootConfReader),-1,324864,(char*)NULL,G__setup_memvarExRootConfReader,G__setup_memfuncExRootConfReader);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_TTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ExRootAnalysisDictLN_ExRootTask),sizeof(ExRootTask),-1,324864,(char*)NULL,G__setup_memvarExRootTask,G__setup_memfuncExRootTask);
}
extern "C" void G__cpp_setupExRootAnalysisDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupExRootAnalysisDict()");
  G__set_cpp_environmentExRootAnalysisDict();
  G__cpp_setup_tagtableExRootAnalysisDict();

  G__cpp_setup_inheritanceExRootAnalysisDict();

  G__cpp_setup_typetableExRootAnalysisDict();

  G__cpp_setup_memvarExRootAnalysisDict();

  G__cpp_setup_memfuncExRootAnalysisDict();
  G__cpp_setup_globalExRootAnalysisDict();
  G__cpp_setup_funcExRootAnalysisDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncExRootAnalysisDict();
  return;
}
class G__cpp_setup_initExRootAnalysisDict {
  public:
    G__cpp_setup_initExRootAnalysisDict() { G__add_setup_func("ExRootAnalysisDict",(G__incsetup)(&G__cpp_setupExRootAnalysisDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initExRootAnalysisDict() { G__remove_setup_func("ExRootAnalysisDict"); }
};
G__cpp_setup_initExRootAnalysisDict G__cpp_setup_initializerExRootAnalysisDict;

